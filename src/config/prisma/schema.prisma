// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}


model User {
  id              Int             @id @default(autoincrement())
  name            String          @db.VarChar
  signupDate      DateTime        @default(now()) @db.Timestamp(6)
  emailAddress    String          @unique @db.VarChar
  password        String          @db.VarChar
  posts           Post[]
  postsRatings    PostRating[]
  comments        Comment[]
  commentsRatings CommentRating[]
}

model Post {
  id           Int          @id @default(autoincrement())
  title        String       @db.VarChar
  body         String       @db.VarChar
  creatorId    Int
  creator      User         @relation(fields: [creatorId], references: [id])
  rating       Int          @default(0)
  createdAt    DateTime     @default(now()) @db.Timestamp(6)
  postsRatings PostRating[]
  comments     Comment[]
}

model Comment {
  id            Int             @id @default(autoincrement())
  text          String          @db.VarChar
  rating        Int             @default(0)
  createdAt     DateTime        @default(now()) @db.Timestamp(6)
  creatorId     Int
  postId        Int?
  repliedToId   Int?
  CommentRating CommentRating[]
  user          User            @relation(fields: [creatorId], references: [id])
  post          Post?           @relation(fields: [postId], references: [id])
  parentComment Comment?        @relation(name: "CommentToComment", fields: [repliedToId], references: [id])
  comments      Comment[]       @relation(name: "CommentToComment")
}

model PostRating {
  userId Int
  postId Int
  rating RatingStatus
  user   User         @relation(fields: [userId], references: [id])
  post   Post         @relation(fields: [postId], references: [id])

  @@unique(fields: [userId, postId], name: "UserAndPostIds")
}

model CommentRating {
  userId    Int
  commentId Int
  rating    RatingStatus
  user      User         @relation(fields: [userId], references: [id])
  comment   Comment      @relation(fields: [commentId], references: [id])

  @@unique(fields: [userId, commentId], name: "UserAndCommentIds")
}

enum RatingStatus {
  neutral
  upvoted
  downvoted
}
