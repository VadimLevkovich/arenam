// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar
  signupDate   DateTime     @default(now()) @db.Timestamp(6)
  emailAddress String       @unique @db.VarChar
  password     String       @db.VarChar
  posts        Post[]
  postsRatings PostRating[]
  comments     Comment[]
}

model Post {
  id           Int          @id @default(autoincrement())
  title        String       @db.VarChar
  body         String       @db.VarChar
  creatorId    Int
  rating       Int          @default(0)
  createdAt    DateTime     @default(now()) @db.Timestamp(6)
  creator      User         @relation(fields: [creatorId], references: [id])
  postsRatings PostRating[]
  comments     Comment[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  text      String    @db.VarChar
  rating    Int       @default(0)
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  creatorId Int
  postId    Int?
  repliedTo Int?
  user      User      @relation(fields: [creatorId], references: [id])
  post      Post?     @relation(fields: [postId], references: [id])
  comment   Comment?  @relation(fields: [repliedTo], references: [id])
  Comment   Comment[] @relation("CommentToComment")
}

model PostRating {
  userId Int
  postId Int
  rating RatingStatus
  user   User         @relation(fields: [userId], references: [id])
  post   Post         @relation(fields: [postId], references: [id])

  @@unique(fields: [userId, postId], name: "UserAndPostIds")
}

enum RatingStatus {
  neutral
  upvoted
  downvoted
}
